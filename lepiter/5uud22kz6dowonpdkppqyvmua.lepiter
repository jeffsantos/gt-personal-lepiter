{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T11:04:50.235989-03:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T11:06:42.663815-03:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "b+cwfwu8DQCWMXWwDYDtYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "[Expressing architectural constraints for a Java system using Glamorous Toolkit](https://medium.com/feenk/expressing-architectural-constraints-for-a-java-system-in-glamorous-toolkit-3b45b7eb2573#id_token=eyJhbGciOiJSUzI1NiIsImtpZCI6IjMzZmY1YWYxMmQ3NjY2YzU4Zjk5NTZlNjVlNDZjOWMwMmVmOGU3NDIiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJuYmYiOjE2NDIwNDA1OTgsImF1ZCI6IjIxNjI5NjAzNTgzNC1rMWs2cWUwNjBzMnRwMmEyamFtNGxqZGNtczAwc3R0Zy5hcHBzLmdvb2dsZXVzZXJjb250ZW50LmNvbSIsInN1YiI6IjEwODQ4MTEzNjQ4Nzg2NzkxNTIyNSIsImVtYWlsIjoiamVmZmVyc29uLmIuc2FudG9zQGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJhenAiOiIyMTYyOTYwMzU4MzQtazFrNnFlMDYwczJ0cDJhMmphbTRsamRjbXMwMHN0dGcuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJuYW1lIjoiSmVmZmVyc29uIFNhbnRvcyIsInBpY3R1cmUiOiJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS0vQU9oMTRHZzN2WGJFeFNWQTlxZjhXMHhPYWROSGwtdGxWem82MEhrM21xbVhUV009czk2LWMiLCJnaXZlbl9uYW1lIjoiSmVmZmVyc29uIiwiZmFtaWx5X25hbWUiOiJTYW50b3MiLCJpYXQiOjE2NDIwNDA4OTgsImV4cCI6MTY0MjA0NDQ5OCwianRpIjoiNmRlNTVmODkyNTJjNTE0MThkNjY4YjMzNzMyYzViM2I4ZjExODA1OCJ9.aVr4QYLkubzD80K1Rjh-P-0atPbTxqlmBc2Ur_PkU9rlTScOubyhifOinhc_nTTuJr8N77iilUrJ9xFmdF0pehyVr4c_L5AEB8647qbSiqIrtPT-PdHSjGR9T5v545hIQ5K2hXEWgpT5z2secCD2e2l-RRpkeYvE60mXtOSOT-CdniMCQAjByZhXUGd756XWF0qw-jCpJzeuzB5PL_ymPrTxDlB_5z5U4DNd8X4SYaydQ7LcZfS8xu8Cofyicg_P17fmub8PILQpsyPCeC3VSU3prPsis_ZAM_kGos2UmBZvFLucT27vNbPh_oH_opcBdCq-fqlZfUy39I89wzABxQ)"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T11:12:31.085854-03:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T11:13:15.011062-03:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "7ppanAu8DQCWjdzUDYDtYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "**1. Describe the constraint**\n\nFirst, we need to describe the architectural constraint in plain words. The description can consist in at least a few sentences primarily focusing on the reason for which we want to verify the constraint. The code of the constraint describes what it does, and the plain text description should augment that with why it is important.\n\n**2. Ensure it is testable**\n\nSecond, we need to ensure that we can actually test the constraint. For this we need to make sure that we can clearly identify the types of entities and relations involved in the constraint, and that we have all necessary data. For example, before testing that the database layer does not access code from the business layer we first need to identify which code belongs in the database layer and which code belongs in the business layer.\n\n**3. Attach a stakeholder**\n\nEvery constraint should have a stakeholder. This is the person, group of persons, or team, for whom the constraint has value. If a constraint fails anyone can challenge the validity of a constraint. The stakeholder’s role is to defend it, or at least provide extra context for why it is relevant. If there’s nobody to defend it, the constraint should be removed as it does not add value anymore.\n\n**4. Formulate the analysis**\n\nOnce we have a description of a constraint and a way to identify all relevant entities, we can proceed to specify an analysis that expresses that constraint. We should phrase the analysis so that it returns a list of entities (for example methods, classes, packages) that do not respect the constraint. This way, if the analysis returns an empty list the constraint passes. The constraint is considered as failing if the analysis returns one or more entities."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T11:16:38.251542-03:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T11:16:39.317646-03:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "6wIWqwu8DQCYH5BmDYDtYg=="
				},
				"code" : "model := MooseModel root allModels detect: [ :each | each name = 'argouml' ]"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T11:13:33.453888-03:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T11:13:41.954207-03:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "dUQSoAu8DQCW9QN2DYDtYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Deprecated Classes"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T11:15:21.008303-03:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T11:15:43.95856-03:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "vWl7pgu8DQCX6+UADYDtYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "From the model get the list of all classes that are deprecated. From this list select all classes that have at least a client that is not deprecated."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T11:15:15.792256-03:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T11:16:55.613436-03:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "utMrpgu8DQCX5xRODYDtYg=="
				},
				"code" : "allDeprecatedClasses := model allModelClasses select: [ :each |\n  each isAnnotatedWith: 'Deprecated' ].\nallDeprecatedClasses select: [ :each |\n  each clientTypes anySatisfy: [ :aClient |\n    (aClient isAnnotatedWith: 'Deprecated') not ] ]"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T11:23:18.305719-03:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T11:23:40.939063-03:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "K2Tuwgu8DQCYOdCxDYDtYg=="
				},
				"code" : "GtArgoUMLDeprecatedClassesWithNoDeprecatedClients new\n  model: model"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T12:05:42.55644-03:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T12:06:00.087239-03:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "KJWUWgy8DQCYUNU7DYDtYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Ui widgets inside UI Packages"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T12:06:06.244375-03:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T12:06:42.18821-03:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "0AP+Wwy8DQCY9JgtDYDtYg=="
				},
				"code" : "allWidgetClasses := model allModelClasses select: [ :aClass |\n  aClass superclassHierarchyGroup anySatisfy: [ :aSuperclass |\n    aSuperclass mooseName = 'java::awt::Component'] ]."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T12:06:45.390322-03:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T12:06:46.27416-03:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "UFlTXgy8DQCZOQnUDYDtYg=="
				},
				"code" : "allWidgetClasses reject: [ :aClass |\n  aClass namespaceScope mooseName includesSubstring: '::ui' ]."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T12:07:01.903972-03:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T12:07:10.180445-03:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "F1VPXwy8DQCZQj7fDYDtYg=="
				},
				"code" : "GtArgoUMLWidgetsInTheWrongPackages new\n model: model"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T12:07:27.91011-03:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T12:07:30.525724-03:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "QijcYAy8DQCZVyUXDYDtYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "##Verifying dependencies between modules"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T12:07:37.293378-03:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T12:15:02.298908-03:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "qlNrYQy8DQCZahcQDYDtYg=="
				},
				"code" : "moduleNames := #('cpp' 'csharp' 'java' 'php' 'sql').\nmodulePackages := model allModelNamespaces select: [ :aNamespace |\n  | fullName |\n  fullName := aNamespace mooseName.\n  moduleNames anySatisfy: [ :moduleName |\n    fullName beginsWith: 'org::argouml::language::', moduleName ] ].\nmodulesByName := modulePackages groupedBy: [ :aNamespace |    \n  aNamespace withAllParentScopes reversed fourth mooseName ]."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T12:18:53.078124-03:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T12:19:45.468926-03:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "ofuyiQy8DQCaVxbJDYDtYg=="
				},
				"code" : "allInvalidDependencies := OrderedCollection new.\nmodulesByName keysAndValuesDo: [ :moduleName :packages |\n | moduleDependencies invalidDependencies otherModuleNames |\n moduleDependencies := packages flatCollect: #queryAllOutgoing. \n otherModuleNames := modulesByName keys copyWithout: moduleName.\n \n invalidDependencies := moduleDependencies select: [ :aDependency |\n  aDependency to asCollection anySatisfy: [ :aCandidate |\n   otherModuleNames anySatisfy: [ :anotherModuleName |\n    aCandidate mooseName beginsWith: anotherModuleName ] ] ].\n \n allInvalidDependencies addAll: invalidDependencies ].\nallInvalidDependencies"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T12:26:08.597996-03:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T12:26:11.855161-03:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "53yoowy8DQCaYqNQDYDtYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Report"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T12:26:17.707784-03:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T12:26:21.758205-03:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "oHozpAy8DQCal2VPDYDtYg=="
				},
				"code" : "report := GtArgoUMLReport onModel: model."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T12:26:12.548381-03:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-07-04T12:26:12.548381-03:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "J8jkowy8DQCak1iBDYDtYg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : ""
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2023-07-04T11:12:07.219157-03:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2023-07-04T11:12:07.219157-03:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "tutorial - Architectural Constraints"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "625fc77e-0bbc-0d00-962f-31850d80ed62"
	}
}